---
- name: Create Users
  user:
    append: "{{ item.append | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    create_home: "{{ item.create_home | default(omit) }}"
    expires: "{{ item.expires | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
    generate_ssh_key: "{{ item.generate_ssh_key | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    hidden: "{{ item.hidden | default(omit) }}"
    home: "{{ item.home | default(omit) }}"
    local: "{{ item.local | default(omit) }}"
    login_class: "{{ item.login_class | default(omit) }}"
    move_home: "{{ item.move_home | default(omit) }}"
    name: "{{ item.name }}"
    non_unique: "{{ item.non_unique | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    password_lock: "{{ item.password_lock | default(omit) }}"
    remove: "{{ item.remove | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    shell: "{{ item.shell | default(omit) }}"
    skeleton: "{{ item.skeleton | default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(omit) }}"
    ssh_key_comment: "{{ item.ssh_key_comment | default(omit) }}"
    ssh_key_file: "{{ item.ssh_key_file | default(omit) }}"
    ssh_key_passphrase: "{{ item.ssh_key_passphrase | default(omit) }}"
    ssh_key_type: "{{ item.ssh_key_type | default(omit) }}"
    state: "{{ item.state | default(user_state) }}"
    system: "{{ item.system | default(user_system) }}"
    uid: "{{ item.uid | default(omit) }}"
    update_password: "{{ item.update_password | default(omit) }}"
  with_items: "{{ user_list }}"

- name: Added User ssh keys
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.ssh_key }}"
  when: item.ssh_key is defined
  with_items: "{{ user_list }}"

- name: Install sudo
  package:
    name: sudo
    state: present

- name: Add User sudoers files
  copy:
    content: "{{ item.name }} ALL=(ALL) NOPASSWD:ALL"
    dest: "/etc/sudoers.d/{{ item.name }}"
    owner: root
    group: root
  when: item.sudoers is defined and item.sudoers
  with_items: "{{ user_list }}"

# If sudoers is not defined or equals false then make sure the sudoers file is absent
- name: Remove User sudoers file
  file:
    path: "/etc/sudoers.d/{{ item.name }}"
    state: absent
  when: item.sudoers is undefined or not item.sudoers
  with_items: "{{ user_list }}"
